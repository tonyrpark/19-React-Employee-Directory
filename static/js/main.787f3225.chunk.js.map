{"version":3,"sources":["components/jumbotron.js","utils/api.js","components/searchBar.js","components/table.js","App.js","serviceWorker.js","index.js"],"names":["Jumbotron","className","id","axios","get","SearchBar","props","onChange","handleInputChange","value","search","name","type","placeholder","Table","state","sortOrder","results","event","target","searchTerm","toLowerCase","setState","sortByFName","sortedEmployees","sort","a","b","first","reverse","sortByLName","last","API","then","res","data","console","log","catch","err","this","onClick","map","item","includes","src","picture","thumbnail","alt","phone","email","DateFormat","dob","date","login","uuid","React","Component","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.787f3225.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/jumbotron.css\";\n\nfunction Jumbotron() {\n  return (\n    <div>\n      <div className=\"jumbotron jumbotron-fluid\" id=\"jumboTron\">\n        <div className=\"container\">\n          <h1 className=\"display-4\">\n            <i className=\"fas fa-user-friends\"></i> <b>Company Directory</b>\n          </h1>\n          <p className=\"lead\">\n            Search by first or last name or select a column heading to sort.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","\nimport axios from \"axios\";\nconst url = 'https://randomuser.me/api/?results=30';\n\n//api call\nexport default {\n    ApiSearch: function () {\n        return axios.get(url)\n\n    }\n}","import React from \"react\";\n//import DataAreaContext from \"../utils/dataAreaContext.js\";\nimport \"../styles/searchBar.css\"\n\nconst SearchBar = (props) => {\n//const context = useContext(DataAreaContext)\n\n  return (\n    <form>\n    <div className=\"form-group search-widget\">\n      <div className=\"input-group mb-3\">\n  \n        <input\n          onChange={props.handleInputChange}\n          value={props.search}\n          name=\"search\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder='Search directory for Employee'\n          id=\"search\"\n        />\n      </div>\n    </div>\n  </form>\n  );\n}\nexport default SearchBar;","import React from \"react\";\nimport API from \"../utils/api.js\"\nimport Search from \"../components/searchBar\"\nimport \"../styles/table.css\"\n\n//npm package to reformat DOB\nimport DateFormat from 'dateformat';\n\nclass Table extends React.Component {\n\n  state = {\n    sortOrder: \"\",\n    results: [],\n    search: \"\"\n  }\n\n  //Api call for randomuser.me\n  componentDidMount() {\n    API.ApiSearch()\n      .then(res => {\n        this.setState({ results: res.data.results })\n        console.log(this.state.results)\n      }).catch(err => console.log(err))\n  }\n\n\n  //Handle input in search bar \n  handleInputChange = event => {\n\n    if (event.target.name === \"search\") {\n      const searchTerm = event.target.value.toLowerCase();\n      this.setState({\n        search: searchTerm\n      })\n    }\n  }\n\n  //Sort by first name\n  sortByFName = () => {\n    const sortedEmployees = this.state.results.sort((a, b) => {\n      if (b.name.first > a.name.first) {\n        return -1\n      }\n      if (a.name.first > b.name.first) {\n        return 1\n      }\n      return 0;\n    });\n\n    if (this.state.sortOrder === \"DESC\") {\n      sortedEmployees.reverse();\n      this.setState({ sortOrder: \"ASC\" });\n    } else {\n      this.setState({ sortOrder: \"DESC\" });\n    }\n    this.setState({ results: sortedEmployees })\n  }\n\n  //Sort by last name \n  sortByLName = () => {\n    const sortedEmployees = this.state.results.sort((a, b) => {\n      if (b.name.last > a.name.last) {\n        return -1\n      }\n      if (a.name.last > b.name.last) {\n        return 1\n      }\n      return 0;\n    });\n    if (this.state.sortOrder === \"DESC\") {\n      sortedEmployees.reverse();\n      this.setState({ sortOrder: \"ASC\" });\n    } else {\n      this.setState({ sortOrder: \"DESC\" });\n    }\n    this.setState({ results: sortedEmployees })\n  }\n\n  //Render items \n  render() {\n    return (\n      <div>\n        <Search handleInputChange={this.handleInputChange}\n          search={this.state.search} />\n\n        <div className=\"table-responsive\">\n        <table className=\"table table-striped table-resposive text-center table-hover\">\n            <thead>\n              <tr>\n                <th>Image</th>\n                <th>First Name <span className=\"downArrow\" onClick={this.sortByFName}></span></th>\n                <th>Last Name <span className=\"downArrow\" onClick={this.sortByLName}></span></th>\n                <th>Phone</th>\n                <th>Email</th>\n                <th>DOB </th>\n              </tr>\n            </thead>\n\n            { //First Name sort\n              this.state.results && this.state.results.map(item =>\n                item.name.first.toLowerCase().includes(this.state.search) ?\n                  <tbody key={item.login.uuid}>\n                    <tr>\n                      <td ><img src={item.picture.thumbnail} className=\"rounded-circle\" alt=\"thumbnail\" /></td>\n                      <td >{item.name.first}</td>\n                      <td >{item.name.last}</td>\n                      <td >{item.phone}</td>\n                      <td >{item.email}</td>\n                      <td>{DateFormat(item.dob.date, \"mediumDate\")}</td>  \n                    </tr>\n                  </tbody>\n\n                  :\n                  //Last Name sort\n                  item.name.last.toLowerCase().includes(this.state.search) ?\n                    <tbody key={item.login.uuid}>\n                      <tr>\n                      <td ><img src={item.picture.thumbnail} className=\"rounded-circle\" alt=\"thumbnail\" /></td>\n                        <td >{item.name.first}</td>\n                        <td >{item.name.last}</td>\n                        <td >{item.phone} </td>\n                        <td >{item.email}</td>\n                        <td>{DateFormat(item.dob.date, \"mediumDate\")}</td>  \n                      </tr>\n                    </tbody>\n                    :\n                    null\n              )}\n          </table>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Table;","import React from \"react\";\nimport Jumbotron from \"./components/jumbotron\";\nimport Table from \"./components/table\"; \n\nfunction App() {\n  return (\n    <div>\n    <Jumbotron/>\n    <Table />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}